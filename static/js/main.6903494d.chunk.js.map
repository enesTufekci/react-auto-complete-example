{"version":3,"sources":["index.js"],"names":["generateAutoComplete","data","value","filter","item","index","toLowerCase","indexOf","_","Highlight","_ref","highlight","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react_highlight_words__WEBPACK_IMPORTED_MODULE_10___default","highlightClassName","searchWords","autoEscape","textToHighlight","App","state","loading","autoCompleteList","generateData","_callee","_Users_enes_tuefekci_Workspace_oss_react_auto_complete_example_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","_this","setState","abrupt","Promise","resolve","push","faker","fake","stop","handleInputUpdate","event","target","updateAutoCompleteList","autoCompleteGenerator","this","_this$state","className","type","onChange","placeholder","map","key","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4RAOMA,WAAuB,SAAAC,GAAI,OAAI,SAAAC,GACnC,OAAOD,EAAKE,OAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAKE,cAAcC,QAAQL,IAAU,IAAGC,OAAO,SAACK,EAAGH,GAAJ,OAAcA,EAAQ,OAG3G,SAASI,EAATC,GAAyC,IAApBC,EAAoBD,EAApBC,UAAWT,EAASQ,EAATR,MAC9B,OAAOU,EAAAC,EAAAC,cAAA,UACLF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACAG,mBAAmB,YACnBC,YAAa,CAACN,GACdO,YAAY,EACZC,gBAAiBjB,SAKfkB,6MACJC,MAAQ,CACNC,SAAS,EACTpB,MAAO,GACPqB,iBAAkB,MAGpBC,kCAAe,SAAAC,IAAA,OAAAC,EAAAb,EAAAc,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbC,EAAKC,SAAS,CAAEV,SAAS,IADZM,EAAAK,OAAA,SAEN,IAAIC,QAAQ,SAAAC,GAEjB,IADA,IAAIlC,EAAO,GACFI,EAAQ,EAAGA,EAAQ,IAAKA,IAC/BJ,EAAKmC,KAAKC,IAAMC,KAAK,kFAEvBH,EAAQlC,MAPG,wBAAA2B,EAAAW,SAAAd,QAgBfe,kBAAoB,SAACC,GAAU,IACrBvC,EAAUuC,EAAMC,OAAhBxC,MACR6B,EAAKC,SAAS,CAAE9B,SAAS6B,EAAKY,2BAGhCA,uBAAyB,WAAM,IACrBzC,EAAU6B,EAAKV,MAAfnB,MACR,GAAG6B,EAAKa,sBAAsB,CAC5B,IAAMrB,EAAmBQ,EAAKa,sBAAsB1C,EAAMI,eAC1DyB,EAAKC,SAAS,CAAET,wOAbCsB,KAAKrB,sBAAlBvB,SACN4C,KAAKD,sBAAwB5C,EAAqBC,sIAgB5C,IAAA6C,EAC8BD,KAAKxB,MAAjCnB,EADF4C,EACE5C,MAAOqB,EADTuB,EACSvB,iBACf,OAAOX,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,iBACpBnC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,oBACbnC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,OAAO9C,MAAOA,EAAO+C,SAAUJ,KAAKL,kBAAmBU,YAAY,kCAEjFtC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,0BACbnC,EAAAC,EAAAC,cAAA,MAAIiC,UAAU,qBACXxB,EAAiB4B,IAAI,SAAC/C,EAAMC,GAAP,OAAiBO,EAAAC,EAAAC,cAACL,EAAD,CAAW2C,IAAK/C,EAAOM,UAAWT,EAAOA,MAAOE,gBA5C/EiD,IAAMC,WAmDlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO/C,EAAAC,EAAAC,cAACM,EAAD,MAASmC","file":"static/js/main.6903494d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport faker from 'faker'\nimport Highlighter from \"react-highlight-words\";\n\nimport \"./styles.css\";\n\nconst generateAutoComplete = data => value => {\n  return data.filter((item, index) => item.toLowerCase().indexOf(value) > -1).filter((_, index) => index < 6)\n}\n\nfunction Highlight({ highlight, value }) {\n  return <li>\n    <Highlighter\n    highlightClassName=\"highlight\"\n    searchWords={[highlight]}\n    autoEscape={true}\n    textToHighlight={value}\n  />\n  </li>\n}\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    value: '',\n    autoCompleteList: []\n  }\n  \n  generateData = async () => {\n    this.setState({ loading: true })\n    return new Promise(resolve => {\n      let data = []\n      for (let index = 0; index < 100; index++) {\n        data.push(faker.fake(\"{{random.number}} | {{internet.email}} | {{name.firstName}} {{name.lastName}}\"))\n      }\n      resolve(data)\n    })\n  }\n  \n  async componentDidMount(){\n    const data = await this.generateData()\n    this.autoCompleteGenerator = generateAutoComplete(data)\n  }\n\n  handleInputUpdate = (event) => {\n    const { value } = event.target\n    this.setState({ value }, this.updateAutoCompleteList)\n  }\n\n  updateAutoCompleteList = () => {\n    const { value } = this.state;\n    if(this.autoCompleteGenerator){\n      const autoCompleteList = this.autoCompleteGenerator(value.toLowerCase())\n      this.setState({ autoCompleteList})\n    }\n  }\n\n  render(){\n    const { value, autoCompleteList } = this.state\n    return <div className=\"app-container\">\n      <div className=\"search-container\">\n        <input type=\"text\" value={value} onChange={this.handleInputUpdate} placeholder=\"Search for id, email or name\" />\n      </div>\n      <div className=\"autocomplete-container\">\n        <ul className=\"autocomplete-list\">\n          {autoCompleteList.map((item, index) => <Highlight key={index} highlight={value} value={item} />)}\n        </ul>\n      </div>\n    </div>\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}